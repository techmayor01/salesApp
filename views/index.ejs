<!-- @format -->

<!DOCTYPE html>
<html lang="en">
  <%- include ('partials/head') %>
  <body class="">
    <div class="relative flex flex-col min-h-screen bg-slate-200">
      <%- include ('partials/header') %>
      <div class="flex flex-row">
        <div class="lg:w-[220px] lg:p-4"><%- include ('partials/sidebar') %></div>
        <main
          class=" relative top-16 p-4 overflow-auto lg:w-[calc(100%-220px)] w-full bg-slate-200"
          >

          <!-- User Role & Branch Info -->
          <div class="flex items-center justify-between mb-6 border border-gray-200">
            <div class="text-gray-700 text-sm font-medium">
              Welcome, <span class="text-blue-600 font-semibold capitalize"><%= user.role %></span>
            </div>
            <div class="text-gray-700 text-sm">
              Branch: 
              <span class="text-blue-600 font-semibold capitalize">
                <%= ownerBranch && ownerBranch && ownerBranch.branch_name 
                      ? ownerBranch.branch_name 
                      : 'N/A' %>
              </span>
            </div>
          </div>
          


           <div class="grid grid-cols-2 md:grid-cols-4 gap-4 mb-6">
            <a href="/cashReceivable" class="bg-white border border-gray-200 shadow-sm hover:shadow-md rounded-lg p-4 flex flex-col items-center justify-center text-blue-600 transition">
              <i class="fa-solid fa-file-invoice-dollar text-xl mb-2"></i>
              <span class="text-sm">Cash Receivable</span>
            </a>
            <a href="/addReceiveStock" class="bg-white border border-gray-200 shadow-sm hover:shadow-md rounded-lg p-4 flex flex-col items-center justify-center text-blue-600 transition">
              <i class="fa-solid fa-boxes-stacked text-xl mb-2"></i>
              <span class="text-sm">Add Product</span>
            </a>
            <a href="/addInvoice" class="bg-white border border-gray-200 shadow-sm hover:shadow-md rounded-lg p-4 flex flex-col items-center justify-center text-blue-600 transition">
              <i class="fa-solid fa-file-invoice text-xl mb-2"></i>
              <span class="text-sm">Create Sales</span>
            </a>
            <a href="#" class="bg-white border border-gray-200 shadow-sm hover:shadow-md rounded-lg p-4 flex flex-col items-center justify-center text-blue-600 transition">
              <i class="fa-solid fa-building text-xl mb-2"></i>
              <span class="text-sm">Company Info</span>
            </a>
          </div>

       <!-- Report Dropdown (Visible only for Admin and Owner) -->
        <% if (user.role === 'admin' || user.role === 'owner') { %>
          <div class="mb-3 flex justify-between items-center" >
            <label for="reportSelect" class="text-sm text-gray-700 font-medium">Select Report Period:</label>
            <select id="reportSelect" class="border border-gray-300 rounded px-3 py-1 text-sm mt-2 w-1/2" style="width: 10%;">
              <option value="daily">Daily</option>
              <option value="weekly">Weekly</option>
              <option value="monthly">Monthly</option>
            </select>
          </div>
        <% } %>

          <p id="summaryTitle" class="text-sm text-gray-600 mb-3">
            <% if(rangeLabel === 'weekly') { %>
              Last 7 Days Report
            <% } else if(rangeLabel === 'monthly') { %>
              This Month Report
            <% } else { %>
              Daily Report
            <% } %>
          </p>

          <script>
            const reportSelect = document.getElementById("reportSelect");
            const summaryTitle = document.getElementById("summaryTitle");

            // Set dropdown initial value from server
            <% if (typeof rangeLabel !== 'undefined') { %>
              reportSelect.value = "<%= rangeLabel %>";
            <% } %>

            reportSelect.addEventListener("change", function() {
              const selectedRange = reportSelect.value;
              window.location.href = `/dashboard?range=${selectedRange}`;
            });
          </script>





          <!-- Summary Cards -->
         <div class="grid grid-cols-2 md:grid-cols-4 gap-4 mb-6">
            <div class="bg-[#f44236] text-white p-6 rounded-lg shadow">
              <p class="text-2xl font-bold">₦ <%= dailySales.totalSales.toLocaleString() %></p>
              <span>Total Sales</span>
            </div>
            <div class="bg-[#3e70c9] text-white p-6 rounded-lg shadow">
              <p class="text-2xl font-bold">₦ <%= dailySales.totalCashSalesAmount.toLocaleString() %></p>
              <span>Total Cash Sales Amount</span>
            </div>
            <div class="bg-[#f59345] text-white p-6 rounded-lg shadow">
              <p class="text-2xl font-bold">₦ <%= dailySales.totalCreditSales.toLocaleString() %></p>
              <span>Total Credit Sales</span>
            </div>
            <div class="bg-[#43b968] text-white p-6 rounded-lg shadow">
              <p class="text-2xl font-bold">₦ <%= dailySales.totalDebtorsPayment.toLocaleString() %></p>
              <span>Total Debtors Payment</span>
            </div>
          </div>


          <!-- Totals (icons + details) -->
         

          <% if (user.role === 'owner') { %>
            <div class="flex flex-col lg:flex-row gap-6 mt-6">
              <!-- Total Expenses Card -->
              <div class="bg-white p-4 rounded-lg shadow-lg w-full lg:w-1/3">
                <h2 class="text-md font-semibold text-gray-700 mb-2">Total Expenses</h2>
                <div class="text-xl font-bold text-gray-900">₦<span id="totalExpenses">0</span></div>
              </div>
          
              <!-- Total Suppliers Card -->
              <div class="bg-white p-4 rounded-lg shadow-lg w-full lg:w-1/3">
                <h2 class="text-md font-semibold text-gray-700 mb-2">Total Suppliers</h2>
                <div class="text-xl font-bold text-gray-900"><span id="totalSuppliers"><%= suppliers.length %></span> Suppliers</div>
              </div>
          
              <!-- Total Customers Card -->
              <div class="bg-white p-4 rounded-lg shadow-lg w-full lg:w-1/3">
                <h2 class="text-md font-semibold text-gray-700 mb-2">Total Customers</h2>
                <div class="text-xl font-bold text-gray-900"><span id="totalCustomers"><%= customers.length %></span> Customers</div>
              </div>
            </div>
          <% } %>
          
          

          <!-- DEAD STOCK CHART -->
          <h2 class="text-lg font-semibold text-gray-700 mt-6">Stock Analysis</h2>
          <div  style="display: flex; justify-content: space-between; ">
            <div class="bg-white p-4 rounded-lg shadow-lg " style="width: 60%;">
              <h2 class="text-md font-semibold text-gray-700 mb-2">Dead Stock (1+ Month Unsold)</h2>
              <div class="w-full h-48">
                <canvas id="deadStockChart" class="w-full h-full"></canvas>
              </div>
            </div>
          
            <!-- Stock Value Chart -->
            <div class="bg-white p-4 rounded-lg shadow-lg" style="width: 35%;">
              <h2 class="text-md font-semibold text-gray-700 mb-2">Stock Value per Category</h2>
              <div class="w-full h-48">
                <canvas id="stockValueChart" class="w-full h-full"></canvas>
              </div>
            </div>
          </div>
          

          <script src="js/chart.js"></script>

          <script>
            // Sample data — replace with real backend data using EJS or API
            const deadStockLabels = ['Toothpaste', 'Soda', 'Notebook', 'Battery', 'Mop'];
            const deadStockQuantities = [20, 15, 10, 8, 5];
          
            new Chart(document.getElementById("deadStockChart"), {
              type: 'bar',
              data: {
                labels: deadStockLabels,
                datasets: [{
                  label: 'Quantity in Stock',
                  data: deadStockQuantities,
                  backgroundColor: '#f97316' // orange
                }]
              },
              options: {
                responsive: true,
                plugins: {
                  legend: { display: false },
                  title: {
                    display: true,
                    text: 'Products Unsold in the Last 30 Days'
                  }
                },
                scales: {
                  y: {
                    beginAtZero: true,
                    title: {
                      display: true,
                      text: 'Stock Quantity'
                    }
                  },
                  x: {
                    title: {
                      display: true,
                      text: 'Products'
                    }
                  }
                }
              }
            });
          </script>

     

          <script>
            // Example data
            const categoryLabels = ['Food', 'Electronics', 'Drinks', 'Clothing', 'Stationery'];
            const categoryValues = [100000, 80000, 50000, 20000, 10000];
          
            new Chart(document.getElementById("stockValueChart"), {
              type: 'doughnut',
              data: {
                labels: categoryLabels,
                datasets: [{
                  label: 'Stock Value (₦)',
                  data: categoryValues,
                  backgroundColor: [
                    '#3b82f6',
                    '#10b981',
                    '#f59e0b',
                    '#ef4444',
                    '#8b5cf6'
                  ]
                }]
              },
              options: {
                responsive: true,
                plugins: {
                  legend: { position: 'bottom' },
                  title: {
                    display: true,
                    text: 'Stock Value by Category'
                  }
                }
              }
            });
          </script>


          <!-- Customer and Sales Ranking Charts -->
          <h2 class="text-lg font-semibold text-gray-700 mt-6">Customer and Sales Ranking</h2>
          <p class="text-sm text-gray-600">Top 5 Customers and Products</p>
          

          <div style="display: flex; justify-content: space-between; gap: 2%; ">
            <!-- Customer Ranking Chart -->
            <div class="bg-white p-4 rounded-lg shadow-lg w-full lg:w-1/2">
              <h2 class="text-lg font-semibold text-gray-700 mb-4">Top 5 Customer Rankings</h2>
              <canvas id="customerRankingChart" class="w-full h-64"></canvas>
            </div>
          
            <!-- Sales Ranking Chart -->
            <div class="bg-white p-4 rounded-lg shadow-lg w-full lg:w-1/2">
              <h2 class="text-lg font-semibold text-gray-700 mb-4">Top 5 Product Rankings</h2>
              <canvas id="salesRankingChart" class="w-full h-64"></canvas>
            </div>
          </div>
            <script>
  // Dynamic values from backend
  const topCustomers = <%- JSON.stringify(rankings.topCustomers || []) %>;
  const topSellingProducts = <%- JSON.stringify(rankings.topSellingProducts || []) %>;
  const lowPerformingProducts = <%- JSON.stringify(rankings.lowPerformingProducts || []) %>;

  // Prepare Customer Chart Data
  const customerLabels = topCustomers.map(c => c.customer_name || 'Unknown');
  const customerPurchases = topCustomers.map(c => c.totalSpent || 0);
  const customerFrequency = topCustomers.map(c => c.visits || 0);

  // Prepare Product Chart Data
  const productLabels = topSellingProducts.map(p => p.product?.product || 'Unknown');
  const topSelling = topSellingProducts.map(p => p.totalQty || 0);
  const lowPerforming = lowPerformingProducts.map(p => p.totalQty || 0);

  // Fallback to sample if no data is available
  const defaultCustomerLabels = ['John', 'Grace', 'Mike', 'Tolu', 'Anita'];
  const defaultCustomerPurchases = [50, 45, 30, 25, 10];
  const defaultCustomerFrequency = [20, 18, 15, 10, 8];

  const defaultProductLabels = ['Rice', 'Beans', 'Spaghetti', 'Oil', 'Salt'];
  const defaultTopSelling = [300, 280, 240, 150, 120];
  const defaultLowPerforming = [5, 8, 10, 15, 20];

  // Customer Chart
  new Chart(document.getElementById("customerRankingChart"), {
    type: 'bar',
    data: {
      labels: customerLabels.length > 0 ? customerLabels : defaultCustomerLabels,
      datasets: [
        {
          label: 'Purchase Amount',
          backgroundColor: '#3b82f6',
          data: customerPurchases.length > 0 ? customerPurchases : defaultCustomerPurchases
        },
        {
          label: 'Visit Frequency',
          backgroundColor: '#f59e0b',
          data: customerFrequency.length > 0 ? customerFrequency : defaultCustomerFrequency
        }
      ]
    },
    options: {
      responsive: true,
      plugins: {
        legend: { position: 'top' },
        title: { display: true, text: 'Customer Performance' }
      }
    }
  });

  // Sales Chart
  new Chart(document.getElementById("salesRankingChart"), {
    type: 'bar',
    data: {
      labels: productLabels.length > 0 ? productLabels : defaultProductLabels,
      datasets: [
        {
          label: 'Top Selling',
          backgroundColor: '#10b981',
          data: topSelling.length > 0 ? topSelling : defaultTopSelling
        },
        {
          label: 'Low Performing',
          backgroundColor: '#ef4444',
          data: lowPerforming.length > 0 ? lowPerforming : defaultLowPerforming
        }
      ]
    },
    options: {
      responsive: true,
      plugins: {
        legend: { position: 'top' },
        title: { display: true, text: 'Product Sales Ranking' }
      }
    }
  });
</script>


          
        </main>
      </div>
    </div>
    <%- include ('partials/footer') %>
    

  </body>
</html>
