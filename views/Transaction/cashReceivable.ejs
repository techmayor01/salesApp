<!-- @format -->

<!DOCTYPE html>
<html lang="en">
  <%- include ('../partials/head') %>
  <body>
    <div class="relative flex flex-col min-h-screen bg-slate-200">
      <%- include ('../partials/header') %>

      <div class="flex flex-row">
        <div class="w-[220px] p-4"><%- include ('../partials/sidebar') %></div>
        <main
          class="cal relative top-16 p-4 overflow-auto"
          style="width: calc(100% - 220px)">
          <div class="flex flex-row justify-between items-center">
            <h1 class="text-2xl font-semibold">Cash Receivable</h1>
          </div>
          <div class="bg-white p-6 border border-gray-200">
        <form action="/cashReceivable" method="post">
  <input type="hidden" name="selectedUserId" id="selectedUserId" />
  <input type="hidden" name="selectedUserType" id="selectedUserType" />

  <div class="w-1/2">
    <!-- Transaction Type -->
    <div class="flex gap-10 text-sm mb-4">
      <label class="block text-gray-700 mb-1 w-48">Transaction Type <span class="text-red-500">*</span></label>
      <select id="transactionType" class="w-full border border-green-500 p-2 rounded">
        <option value="">Select Type</option>
        <option value="customer">Customer Debt</option>
        <option value="loan">Loan Repayment</option>
      </select>
    </div>

    <!-- Search -->
    <div class="flex gap-10 text-sm">
      <label class="block text-gray-700 mb-1 w-48">Search Name <span class="text-red-500">*</span></label>
      <div class="w-full relative">
        <input id="searchInput" autocomplete="off" type="text" placeholder="Search by Name" class="w-full border border-green-500 p-2 mb-4" />
        <ul id="resultList" class="border border-gray-200 mt-1 bg-white shadow-md absolute z-10 w-full hidden"></ul>
        <div id="resultDetails" class="text-sm space-y-1 mt-2"></div>
      </div>
    </div>

    <!-- Amount -->
    <div class="flex gap-10 text-sm my-3">
      <label class="block text-gray-700 font-medium mt-4 w-48">Cash Received <span class="text-red-500">*</span></label>
      <div class="flex border border-green-500 overflow-hidden w-full">
        <span class="bg-green-200 text-white px-3 flex items-center">₦</span>
        <input type="number" autocomplete="off" name="amount" placeholder="Amount" class="w-full p-2 border-none outline-none" required />
      </div>
    </div>

    <!-- Date -->
    <div class="flex gap-10 text-sm my-3">
      <label class="block text-gray-700 font-medium mt-4 w-48">Date <span class="text-red-500">*</span></label>
      <input type="date" name="date" class="w-full border border-green-500 p-2"  id="payment_date" required />
    </div>
     <script>
      const today = new Date().toISOString().split('T')[0];
      document.getElementById('payment_date').value = today;
    </script>

    <!-- Payment Type -->
    <div class="flex gap-10 text-sm my-3">
      <label class="block text-gray-700 font-medium mt-4 w-48">Payment Type <span class="text-red-500">*</span></label>
      <select name="paymentType" class="w-full border border-green-500 p-2 rounded" required>
        <option value="">Select Payment Type</option>
        <option value="Cash">Cash</option>
        <option value="Credit Card">Credit Card</option>
        <option value="Bank Transfer">Bank Transfer</option>
      </select>
    </div>

    <!-- Reference -->
    <div class="flex gap-10 text-sm my-3">
      <div class="w-48"></div>
      <input type="text" autocomplete="off" name="reference" placeholder="Payment Type Reference # / Detail" class="w-full border border-green-500 p-2 mt-2" />
    </div>

    <!-- Submit -->
    <div class="flex gap-10 text-sm my-3">
      <div class="w-48"></div>
      <button class="bg-green-500 text-white px-6 py-2 mt-4 w-full">Submit Payment</button>
    </div>
  </div>
        </form>


          </div>
        </main>
      </div>
    </div>

<script>
  const transactionType = document.getElementById('transactionType');
  const searchInput = document.getElementById('searchInput');
  const resultList = document.getElementById('resultList');
  const resultDetails = document.getElementById('resultDetails');
  const selectedUserIdInput = document.getElementById('selectedUserId');
  const selectedUserTypeInput = document.getElementById('selectedUserType');

  searchInput.addEventListener('input', function () {
    const type = transactionType.value;
    const query = this.value.trim();

    if (!type || query.length < 2) {
      resultList.classList.add('hidden');
      resultDetails.innerHTML = '';
      return;
    }

    const endpoint = type === 'customer' ? '/api/searchCustomers' : '/api/searchLoaners';

    fetch(`${endpoint}?q=${encodeURIComponent(query)}`)
      .then((res) => res.json())
      .then((results) => {
        resultList.innerHTML = '';
        resultDetails.innerHTML = '';

        if (!Array.isArray(results) || results.length === 0) {
          resultDetails.innerHTML = '<p class="text-gray-500">No match found.</p>';
          resultList.classList.add('hidden');
          return;
        }

        results.forEach((item) => {
          const li = document.createElement('li');
          const displayName = type === 'customer' ? item.customer_name : item.name;
          li.textContent = `${displayName} (${item.mobile})`;
          li.className = 'p-2 hover:bg-green-100 cursor-pointer';

          li.addEventListener('click', () => {
            searchInput.value = displayName;
            selectedUserIdInput.value = item._id;
            selectedUserTypeInput.value = type;

            resultList.classList.add('hidden');
            resultDetails.innerHTML = `<p><strong>Remaining Amount:</strong> ₦${type === 'customer' ? item.total_debt : item.total_debt}</p>`;

            if (type === 'loan' && item.loans) {
              resultDetails.innerHTML += '<div class="mt-2"><strong>Loan Details:</strong><ul class="list-disc pl-5">';
              item.loans.forEach(loan => {
                resultDetails.innerHTML += `
                  <li>
                    ₦${loan.amount_to_repay} due by ${new Date(loan.loanContractEndDate).toLocaleDateString()}
                  </li>`;
              });
              resultDetails.innerHTML += '</ul></div>';
            }
          });

          resultList.appendChild(li);
        });

        resultList.classList.remove('hidden');
      })
      .catch((err) => {
        console.error('Search failed:', err);
        resultDetails.innerHTML = '<p class="text-red-500">An error occurred while searching.</p>';
      });
  });
</script>



  </body>
</html>
